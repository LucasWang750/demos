[
  {
    "url": "/docs/latest/install-and-configure/configuration/",
    "title": "Configuring OpenSearch",
    "content": "Most OpenSearch configuration can take place in the cluster settings API. Certain operations require you to modify opensearch.yml and restart the cluster.\nWhenever possible, use the cluster settings API instead; opensearch.yml is local to each node, whereas the API applies the setting to all nodes in the cluster. Certain settings, however, require opensearch.yml. In general, these settings relate to networking, cluster formation, and the local file system. To learn more, see Cluster formation.\nSpecify settings as environment variables\nYou can specify environment variables as arguments using -E when launching OpenSearch:./opensearch -Ecluster.name = opensearch-cluster -Enode.name = opensearch-node1 -Ehttp.host = 0.0.0.0 -Ediscovery.type = single-node Update cluster settings using the API\nThe first step in changing a setting is to view the current settings: GET _cluster/settings?include_defaults=true For a more concise summary of non-default settings: GET _cluster/settings Three categories of setting exist in the cluster settings API: persistent, transient, and default. Persistent settings, well, persist after a cluster restart. After a restart, OpenSearch clears transient settings.\nIf you specify the same setting in multiple places, OpenSearch uses the following precedence:\nTransient settings\nPersistent settings\nSettings from opensearch.yml Default settings\nTo change a setting, just specify the new one as either persistent or transient. This example shows the flat settings form: PUT _cluster/settings { \"persistent\": { \"action.auto_create_index\": false } } You can also use the expanded form, which lets you copy and paste from the GET response and change existing values: PUT _cluster/settings { \"persistent\": { \"action\": { \"auto_create_index\": false } } } For more information about the Cluster Settings API, see Cluster settings.\nConfiguration file\nYou can find opensearch.yml in /usr/share/opensearch/config/opensearch.yml (Docker) or /etc/opensearch/opensearch.yml (most Linux distributions) on each node.\nYou can edit the OPENSEARCH_PATH_CONF=/etc/opensearch to change the config directory location. This variable is sourced from /etc/default/opensearch (Debian package) and /etc/sysconfig/opensearch (RPM package).\nIf you set your customized OPENSEARCH_PATH_CONF variable, be aware that other default environment variables will not be loaded.\nYou don’t mark settings in opensearch.yml as persistent or transient, and settings use the flat form: cluster.name: my-application action.auto_create_index: true compatibility.override_main_response_version: true The demo configuration includes a number of settings for the Security plugin that you should modify before using OpenSearch for a production workload. To learn more, see Security.\n(Optional) CORS header configuration\nIf you are working on a client application running against an OpenSearch cluster on a different domain, you can configure headers in opensearch.yml to allow for developing a local application on the same machine. Use Cross Origin Resource Sharing so your application can make calls to the OpenSearch API running locally. Add the following lines in your custom-opensearch.yml file (note that the “-“ must be the first character in each line). - http.host:0.0.0.0 - http.port:9200 - http.cors.allow-origin:\"http://localhost\" - http.cors.enabled:true - http.cors.allow-headers:X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization - http.cors.allow-credentials:true",
    "ancestors": [
      "Install and upgrade"
    ],
    "type": "DOCS"
  },
  {
    "url": "/docs/latest/install-and-configure/index/",
    "title": "Install and upgrade OpenSearch",
    "content": "OpenSearch and OpenSearch Dashboards are available on any compatible host that supports Docker (such as Linux, MacOS, or Windows). Additionally, you can install both products on various Linux distributions and on Windows. Download OpenSearch for your preferred platform and then choose one of the following installation guides. OpenSearch OpenSearch Dashboards Docker Docker Helm Helm Tarball Tarball RPM RPM Debian Debian Ansible playbook   Windows Windows After you’ve installed OpenSearch, learn about configuring it for your deployment.\nFor more information about upgrading your OpenSearch cluster, see the upgrade guide.\nFor information about upgrade tools, see OpenSearch upgrade, migration, and comparison tools.\nFor plugin installation, see Installing plugins.",
    "ancestors": [
      "Install and upgrade"
    ],
    "type": "DOCS"
  },
  {
    "url": "/docs/latest/install-and-configure/install-dashboards/debian/",
    "title": "Debian",
    "content": "Installing OpenSearch Dashboards using the Advanced Packaging Tool (APT) package manager simplifies the process considerably compared to the Tarball method. For example, the package manager handles several technical considerations, such as the installation path, location of configuration files, and creation of a service managed by systemd.\nBefore installing OpenSearch Dashboards you must configure an OpenSearch cluster. Refer to the OpenSearch Debian installation guide for steps.\nThis guide assumes that you are comfortable working from the Linux command line interface (CLI). You should understand how to input commands, navigate between directories, and edit text files. Some example commands reference the vi text editor, but you may use any text editor available.\nInstalling OpenSearch Dashboards from a package\nDownload the Debian package for the desired version directly from the OpenSearch downloads page. The Debian package can be downloaded for both x64 and arm64 architectures.\nFrom the CLI, install using dpkg. # x64 sudo dpkg -i opensearch-dashboards-2.10.0-linux-x64.deb # arm64 sudo dpkg -i opensearch-dashboards-2.10.0-linux-arm64.deb After the installation completes, reload the systemd manager configuration. sudo systemctl daemon-reload Enable OpenSearch as a service. sudo systemctl enable opensearch-dashboards Start the OpenSearch service. sudo systemctl start opensearch-dashboards Verify that OpenSearch launched correctly. sudo systemctl status opensearch-dashboards Fingerprint verification\nThe Debian package is not signed. If you would like to verify the fingerprint, the OpenSearch Project provides a.sig file as well as the.deb package for use with GNU Privacy Guard (GPG).\nDownload the desired Debian package. curl -SLO https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/2.10.0/opensearch-dashboards-2.10.0-linux-x64.deb Download the corresponding signature file. curl -SLO https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/2.10.0/opensearch-dashboards-2.10.0-linux-x64.deb.sig Download and import the GPG key. curl -o- https://artifacts.opensearch.org/publickeys/opensearch.pgp | gpg --import - Verify the signature. gpg --verify opensearch-dashboards-2.10.0-linux-x64.deb.sig opensearch-dashboards-2.10.0-linux-x64.deb Installing OpenSearch Dashboards from an APT repository\nAPT, the primary package management tool for Debian–based operating systems, allows you to download and install the Debian package from the APT repository.\nInstall the necessary packages. sudo apt-get update &amp;&amp; sudo apt-get -y install lsb-release ca-certificates curl gnupg2 Import the public GPG key. This key is used to verify that the APT repository is signed. curl -o- https://artifacts.opensearch.org/publickeys/opensearch.pgp | sudo gpg --dearmor --batch --yes -o /usr/share/keyrings/opensearch-keyring Create an APT repository for OpenSearch. echo \"deb [signed-by=/usr/share/keyrings/opensearch-keyring] https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/2.x/apt stable main\" | sudo tee /etc/apt/sources.list.d/opensearch-dashboards-2.x.list Verify that the repository was created successfully. sudo apt-get update With the repository information added, list all available versions of OpenSearch: sudo apt list -a opensearch-dashboards Choose the version of OpenSearch you want to install:\nUnless otherwise indicated, the latest available version of OpenSearch is installed. sudo apt-get install opensearch-dashboards To install a specific version of OpenSearch Dashboards, pass a version number after the package name. # Specify the version manually using opensearch=&lt;version&gt; sudo apt-get install opensearch-dashboards = 2.10.0 Once complete, enable OpenSearch. sudo systemctl enable opensearch-dashboards Start OpenSearch. sudo systemctl start opensearch-dashboards Verify that OpenSearch launched correctly. sudo systemctl status opensearch-dashboards Exploring OpenSearch Dashboards\nBy default, OpenSearch Dashboards, like OpenSearch, binds to localhost when you initially install it. As a result, OpenSearch Dashboards is not reachable from a remote host unless the configuration is updated.\nOpen opensearch_dashboards.yml. sudo vi /etc/opensearch-dashboards/opensearch_dashboards.yml Specify a network interface that OpenSearch Dashboards should bind to. # Use 0.0.0.0 to bind to any available interface. server.host: 0.0.0.0 Save and quit.\nRestart OpenSearch Dashboards to apply the configuration change. sudo systemctl restart opensearch-dashboards From a web browser, navigate to OpenSearch Dashboards. The default port is 5601.\nLog in with the default username admin and the default password admin.\nVisit Getting started with OpenSearch Dashboards to learn more.",
    "ancestors": [
      "Install and upgrade",
      "Installing OpenSearch Dashboards"
    ],
    "type": "DOCS"
  }
]
